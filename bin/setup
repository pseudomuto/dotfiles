#!/bin/bash
set -uo pipefail
source "${0%/*}/../lib/util.sh"

trap "cleanup_pipes" EXIT

install_prerequisites() {
  task "symlink files" "bin/install files -s files" || return $?
  task "install base packages" "bin/install packages autoconf build-essential curl tmux wget zsh" || return $?
}

install_packages() {
  task "install git" "bin/install git -v 2.9.2" || return $?
  task "install hub" "bin/install hub -v 2.2.3" || return $?
}

install_development_environments() {
  # rubba-dub-dubby
  task "install ruby-install" "bin/install ruby-install -v 0.6.0" || return $?
  task "install system ruby 2.3.1" "bin/install ruby -v 2.3.1 --system" || return $?
  task "install user ruby 2.2.4" "bin/install ruby -v 2.2.4" || return $?
  task "install chruby" "bin/install chruby -v 0.3.9" || return $?

  task "install golang" "bin/install golang -v 1.6.3" || return $?
}

install_source_dependencies() {
  task "fetch oh-my-zsh" "bin/install source-repo -r robbyrussell/oh-my-zsh --sha f553724" || return $?
}

task() {
  _echo "${1}"
  run_task "$@"
  wait $current_task_pid
}

run_phase() {
  _echo "$(colorize "${1}" $purple_color)" "┏━━ "
  eval "${2}" || end_phase "Phase '${1}' failed. Aborting now."
  end_phase
}

end_phase() {
  _echo "" "┗━━ "
  if [ -n "${1:-}" ]; then fail "${1}"; fi
}

main() {
  run_phase "Setup prerequisites and symlinks" "install_prerequisites"
  run_phase "Install development environment" "install_development_environments"
  run_phase "Install applications" "install_packages"
  run_phase "Fetch dependencies" "install_source_dependencies"

  echo -e "$(colorize "✓ All done" $green_color)"
}

main "$@"
